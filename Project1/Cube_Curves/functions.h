int count_curves(char *);
int count_points(char *, struct curve *);
void save_input(char *, struct curve *);
double euclidean(struct point, struct point);
double dtw(struct curve, struct curve);
struct dtw_cell *min_neighbour(struct dtw_cell *, struct dtw_cell *, struct dtw_cell *);
double count_d(struct curve *, int);
void snap(struct curve *, int ****, int **, int, int, int);
void concat_curve(struct vec **, struct curve *, int ****, int, int, int);
int search(int, struct curve *, struct curve, double *);
void cube_train(int **, struct list_node ***, struct list_node **, int, int);
void factors(int, int, int, int *);
int modulo_calc(int, int, int);
void lsh_train(struct vec *, struct h_func *, int *,int **, int, int, int, int, int);
void cube_train(int **, struct list_node ***, struct list_node **, int, int);
void edges(int *, int *, int, int);
int count_edges(int, int, int *, int *, int, int, int);
void lsh_search(struct vec, struct h_func *, int *, int *, int, int, int, int);
int cube_search(int *, struct list_node ***, struct list_node **, struct curve *, struct curve, double *, int, int, int, int, int);
